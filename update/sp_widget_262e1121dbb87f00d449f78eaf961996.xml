<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($uibModal, $scope, $rootScope, $timeout, spAtf, $q) {
	/* widget controller */
	var c = this;
	
	c.CONSTANTS = {
		max_display_length: 125
	};

	// Debug
	console.log(c);
	
	/***********************************
	 Events
	***********************************/
	c.toggleMoreLess = function(feedback) {
		// Purpose: Toggle the show more/less feature of a card.
		feedback.showMore = !feedback.showMore;
	}
	

	/***********************************
	 Utilities
	***********************************/
	function isFunction (fn) {
		// Purpose: Determine if fn is a function.
		return fn && {}.toString.call(fn) === '[object Function]';
	}

	/***********************************
	 Modal support
	***********************************/

	c.openSubmitFeedbackModal = function() {
		// Purpose: Open a modal to collect record producer for submitting
		// new feedback.
		c.modalInstance = $uibModal.open({
			templateUrl: 'submitFeedbackModalTemplate',
			scope: $scope
		});
		c.confirmFields = {} // Nothing to send at the moment.
	};

	c.closeModal = function() {
		c.modalInstance.close();
	};


	/***********************************
	 Catalog item support
	***********************************/
	
	c.submitting = false;

	c.submitModal = function(){
		// Purpose: When the user "clicks" the submit button:
		//          Capture the actual catalog item submit button
		//          element and trigger the "click" client event,
		//          allowing the catalog item submit to occur in
		//          the baseline widget.
		c.submiting = true;
		var submitButton = angular.element('div.inline-cart button:submit.btn-primary.ng-binding');
		if(submitButton.length != 0){
			$timeout(function(){
				submitButton.trigger('click');
			},0);
			return;
		}
	};


}]]></client_script>
        <controller_as>c</controller_as>
        <css>main {
	background-color: $light_grey;
  min-height: 100vh;
  margin: -10px -15px;
}

header {
  position: relative;
}

header.top-header {
  color: $pure_white;
  background-color: $gable_green;
  height: 5em;
  text-transform: capitalize;
}

header.btn-header {
	background-color: $cruise; 
  padding: 0.3em 0;
  height: 5em;
}

.box-left {
	position: absolute;
  top: 0em;
  left: 5vw;
  height: 10em;
  z-index: 100;
}

.box-right {
	position: absolute;
  top: 0.5em;
  right: 5vw;
  z-index: 100;
}

.score-label {
	height: 10em;
  width: 10em;
  color: $pure_white;
  background-color: $ocean_spray;
  padding: 0.15em;
  text-align: center;
  display: inline-block;
}

.text-large {
	font-size: 3em;
  font-weight: bold;
}

.text-xl {
	font-size: 3em; 
}

.text-xxl {
	font-size: 5em;
  line-height: 0.75em;
}

.box-employee {
	text-align: center;
}

.img-photo {
	width: 7.5em;
  height: 7.5em;
  border-radius: 50%;
  background-color: $medium_grey;
  border: 0.5em solid $pure_white;
}

.user-label {
	width: 7.5em;
  height: 7.5em;
  border-radius: 50%;
  background-color: $medium_grey;
  border: 0.5em solid $pure_white;
  text-transform: uppercase;
  padding: 0.75em;
}

.btn-bar {
	text-align: right;
  padding: 1em 5vw;
  margin: 0 8.21em;
}

.cards {
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  margin: 2em 3.5vw;
}

.card {
  flex: 0 0 20vw;
  margin: 1.4vw;
  border: 1px solid #ccc;
  box-shadow: 2px 2px 6px 0px  rgba(0,0,0,0.3);
  background-color: $pure_white;
  position: relative;
  max-width: 20vw;
  max-height: 30vh;
  overflow-y: auto;
} 

.card .text {
  padding: 20px;
  font-size: 1.25em;
}

.card em {
	color: $medium_grey;
  text-transform: capitalize;
}

@media (max-width: 960px) {
  .card {
   	flex: 0 0 27vw;
    max-width: 27vw;
  }
}

@media (max-width: 720px) {
  .card {
   	flex: 0 0 40vw;
    max-width: 40vw;
  }

  .score-label {
    width: 7em; 
  }
  
  .btn-bar {
    text-align: center;
  	padding: 1em 1vw; 
  }
}

@media (max-width: 540px) {
  .card {
   	flex: 0 0 80vw;
    max-width: 80vw;
  }
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>peer_scorecard</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Peer Scorecard</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	var baseUtils = new Base(),
			peerReviewUtils = new PeerReview(),
			currentUserId,
			catalogItemId = '0846d715db5c7700d449f78eaf96195e';

	// 1. Set the user sys_id to get data for.
	currentUserId = gs.getUserID() + '';

	// 2. Add to data.
	data.user = peerReviewUtils.getUserData(currentUserId);
	data.currentScore = peerReviewUtils.getUserScore(currentUserId);
	data.feedbackList = peerReviewUtils.getFeedbackList(currentUserId);

	// 3. Add the record producer to submit new feedback.
	data.recordProducer = $sp.getWidget('widget-sc-cat-item-v2', {
		sys_id:catalogItemId, 
		display_cart_on_right: false, 
		show_field_validation_messages: false, 
		auto_redirect: false});
	data.sc_cat_item = $sp.getCatalogItem({
		sys_id: catalogItemId + '',
		is_ordering: true
	});
	
	// 4. Get inspired!
	data.quotes = peerReviewUtils.getQuotes();
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>brian.griffith</sys_created_by>
        <sys_created_on>2019-04-13 20:16:42</sys_created_on>
        <sys_id>262e1121dbb87f00d449f78eaf961996</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Peer Scorecard</sys_name>
        <sys_package display_value="Peer Review" source="x_snc_peer_review">a2398835db2077005870fc3daf9619ba</sys_package>
        <sys_policy/>
        <sys_scope display_value="Peer Review">a2398835db2077005870fc3daf9619ba</sys_scope>
        <sys_update_name>sp_widget_262e1121dbb87f00d449f78eaf961996</sys_update_name>
        <sys_updated_by>brian.griffith</sys_updated_by>
        <sys_updated_on>2019-04-28 17:50:28</sys_updated_on>
        <template><![CDATA[<main>
  <header class="top-header">
    <div class="box-left">
      <div class="score-label">
        <div class="text-xl">N P S</div>
        <div class="text-xxl">{{c.data.currentScore.fields.nps_score.value}}</div>
      </div>
    </div>
    <div class="box-right box-employee">
      <div>
        {{c.data.user.fields.name.display_value}}
      </div>
      <img class="img-photo" src="/sys_attachment.do?sys_id={{c.data.user.fields.photo.value}}"
           alt="{{c.data.user.initials}}" ng-if="c.data.user.fields.photo.value" />
      <div class="user-label" ng-if="!c.data.user.fields.photo.value">
        <div class="text-xl">
          {{c.data.user.initials}}
        </div>
      </div>
    </div>
  </header>
  <header class="btn-header">
    <div class="btn-bar">
      <button class="btn btn-default" ng-click="c.openSubmitFeedbackModal()">
        <i class="fa fa-paper-plane"></i>
        Submit Feedback
      </button>
    </div>
  </header>
  
  <section class="cards">
    <article class="card">
      <div class="text">
        <p>
          {{c.data.quotes.category}} Quote:
        </p>
        <p>
          {{c.data.quotes.quote}}
        </p>
        <em>~ {{c.data.quotes.author}}</em>
      </div>
    </article>
    <article class="card" ng-repeat="feedback in c.data.feedbackList">
      <div class="text">
        <p ng-show="!feedback.showMore">
          "{{feedback.question.answer_short}}"
          <a href="#" ng-if="feedback.question.answer_full.length>c.CONSTANTS.max_display_length" ng-click="c.toggleMoreLess(feedback)">more</a>
        </p>
        <p ng-show="feedback.showMore">
          "{{feedback.question.answer_full}}"
          <a href="#" ng-click="c.toggleMoreLess(feedback)">less</a>
        </p>
        <em>~ {{feedback.fields.submitter.display_value}}</em>
      </div>
    </article>
  </section>
</main>

<script type="text/ng-template" id="submitFeedbackModalTemplate">
  <div class="panel panel-default" ng-init="confirmFields = c.confirmFields">
    <div class="panel-heading">
      <h4 class="panel-title">Submit Peer Review Feedback</h4>
    </div>
    <div class="panel-body">
      <sp-widget widget="data.recordProducer"></sp-widget>  
    </div>
    <div class="panel-footer text-right">
      <button type="button" class="btn-link" ng-click="c.closeModal()" ng-if="!c.submitting">Cancel</button>
      <button type="button" class="btn btn-primary" ng-click="c.submitModal()" ng-if="!c.submitting">Submit</button>
      <span class="text text-primary" ng-if="c.submitting">Submitting...</span>
    </div>
  </div>
</script>]]></template>
    </sp_widget>
</record_update>
